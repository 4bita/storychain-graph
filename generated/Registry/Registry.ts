// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class candidateRegistered extends ethereum.Event {
  get params(): candidateRegistered__Params {
    return new candidateRegistered__Params(this);
  }
}

export class candidateRegistered__Params {
  _event: candidateRegistered;

  constructor(event: candidateRegistered) {
    this._event = event;
  }

  get headProfileId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get headPubId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get index(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get headHash(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }

  get profileId(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get pubId(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class storyRegistered extends ethereum.Event {
  get params(): storyRegistered__Params {
    return new storyRegistered__Params(this);
  }
}

export class storyRegistered__Params {
  _event: storyRegistered;

  constructor(event: storyRegistered) {
    this._event = event;
  }

  get profileId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get pubId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _hash(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class Registry__getStoryResultValue0Struct extends ethereum.Tuple {
  get profileId(): BigInt {
    return this[0].toBigInt();
  }

  get pubId(): BigInt {
    return this[1].toBigInt();
  }
}

export class Registry__getStoryInputHeadStruct extends ethereum.Tuple {
  get profileId(): BigInt {
    return this[0].toBigInt();
  }

  get pubId(): BigInt {
    return this[1].toBigInt();
  }
}

export class Registry__getStoryByHashResultValue0Struct extends ethereum.Tuple {
  get profileId(): BigInt {
    return this[0].toBigInt();
  }

  get pubId(): BigInt {
    return this[1].toBigInt();
  }
}

export class Registry__getStoryItemCandidateVotesInputHeadStruct extends ethereum.Tuple {
  get profileId(): BigInt {
    return this[0].toBigInt();
  }

  get pubId(): BigInt {
    return this[1].toBigInt();
  }
}

export class Registry__getStoryItemCandidateVotesInputCandidateStruct extends ethereum.Tuple {
  get profileId(): BigInt {
    return this[0].toBigInt();
  }

  get pubId(): BigInt {
    return this[1].toBigInt();
  }
}

export class Registry__getStoryVotingDeadlineInputHeadStruct extends ethereum.Tuple {
  get profileId(): BigInt {
    return this[0].toBigInt();
  }

  get pubId(): BigInt {
    return this[1].toBigInt();
  }
}

export class Registry__listStoryItemCandidatesResultValue0Struct extends ethereum.Tuple {
  get profileId(): BigInt {
    return this[0].toBigInt();
  }

  get pubId(): BigInt {
    return this[1].toBigInt();
  }
}

export class Registry__listStoryItemCandidatesInputHeadStruct extends ethereum.Tuple {
  get profileId(): BigInt {
    return this[0].toBigInt();
  }

  get pubId(): BigInt {
    return this[1].toBigInt();
  }
}

export class Registry extends ethereum.SmartContract {
  static bind(address: Address): Registry {
    return new Registry("Registry", address);
  }

  allStories(param0: BigInt): Bytes {
    let result = super.call("allStories", "allStories(uint256):(bytes32)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toBytes();
  }

  try_allStories(param0: BigInt): ethereum.CallResult<Bytes> {
    let result = super.tryCall("allStories", "allStories(uint256):(bytes32)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getStory(
    head: Registry__getStoryInputHeadStruct
  ): Array<Registry__getStoryResultValue0Struct> {
    let result = super.call(
      "getStory",
      "getStory((uint256,uint256)):((uint256,uint256)[])",
      [ethereum.Value.fromTuple(head)]
    );

    return result[0].toTupleArray<Registry__getStoryResultValue0Struct>();
  }

  try_getStory(
    head: Registry__getStoryInputHeadStruct
  ): ethereum.CallResult<Array<Registry__getStoryResultValue0Struct>> {
    let result = super.tryCall(
      "getStory",
      "getStory((uint256,uint256)):((uint256,uint256)[])",
      [ethereum.Value.fromTuple(head)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Registry__getStoryResultValue0Struct>()
    );
  }

  getStoryByHash(
    _hash: Bytes
  ): Array<Registry__getStoryByHashResultValue0Struct> {
    let result = super.call(
      "getStoryByHash",
      "getStoryByHash(bytes32):((uint256,uint256)[])",
      [ethereum.Value.fromFixedBytes(_hash)]
    );

    return result[0].toTupleArray<Registry__getStoryByHashResultValue0Struct>();
  }

  try_getStoryByHash(
    _hash: Bytes
  ): ethereum.CallResult<Array<Registry__getStoryByHashResultValue0Struct>> {
    let result = super.tryCall(
      "getStoryByHash",
      "getStoryByHash(bytes32):((uint256,uint256)[])",
      [ethereum.Value.fromFixedBytes(_hash)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Registry__getStoryByHashResultValue0Struct>()
    );
  }

  getStoryItemCandidateVotes(
    head: Registry__getStoryItemCandidateVotesInputHeadStruct,
    index: BigInt,
    candidate: Registry__getStoryItemCandidateVotesInputCandidateStruct
  ): BigInt {
    let result = super.call(
      "getStoryItemCandidateVotes",
      "getStoryItemCandidateVotes((uint256,uint256),uint256,(uint256,uint256)):(uint256)",
      [
        ethereum.Value.fromTuple(head),
        ethereum.Value.fromUnsignedBigInt(index),
        ethereum.Value.fromTuple(candidate)
      ]
    );

    return result[0].toBigInt();
  }

  try_getStoryItemCandidateVotes(
    head: Registry__getStoryItemCandidateVotesInputHeadStruct,
    index: BigInt,
    candidate: Registry__getStoryItemCandidateVotesInputCandidateStruct
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getStoryItemCandidateVotes",
      "getStoryItemCandidateVotes((uint256,uint256),uint256,(uint256,uint256)):(uint256)",
      [
        ethereum.Value.fromTuple(head),
        ethereum.Value.fromUnsignedBigInt(index),
        ethereum.Value.fromTuple(candidate)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getStoryVotingDeadline(
    head: Registry__getStoryVotingDeadlineInputHeadStruct
  ): BigInt {
    let result = super.call(
      "getStoryVotingDeadline",
      "getStoryVotingDeadline((uint256,uint256)):(uint256)",
      [ethereum.Value.fromTuple(head)]
    );

    return result[0].toBigInt();
  }

  try_getStoryVotingDeadline(
    head: Registry__getStoryVotingDeadlineInputHeadStruct
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getStoryVotingDeadline",
      "getStoryVotingDeadline((uint256,uint256)):(uint256)",
      [ethereum.Value.fromTuple(head)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  listStoryItemCandidates(
    head: Registry__listStoryItemCandidatesInputHeadStruct,
    index: BigInt
  ): Array<Registry__listStoryItemCandidatesResultValue0Struct> {
    let result = super.call(
      "listStoryItemCandidates",
      "listStoryItemCandidates((uint256,uint256),uint256):((uint256,uint256)[])",
      [ethereum.Value.fromTuple(head), ethereum.Value.fromUnsignedBigInt(index)]
    );

    return result[0].toTupleArray<
      Registry__listStoryItemCandidatesResultValue0Struct
    >();
  }

  try_listStoryItemCandidates(
    head: Registry__listStoryItemCandidatesInputHeadStruct,
    index: BigInt
  ): ethereum.CallResult<
    Array<Registry__listStoryItemCandidatesResultValue0Struct>
  > {
    let result = super.tryCall(
      "listStoryItemCandidates",
      "listStoryItemCandidates((uint256,uint256),uint256):((uint256,uint256)[])",
      [ethereum.Value.fromTuple(head), ethereum.Value.fromUnsignedBigInt(index)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        Registry__listStoryItemCandidatesResultValue0Struct
      >()
    );
  }

  protocolFeeUnderlying(): Address {
    let result = super.call(
      "protocolFeeUnderlying",
      "protocolFeeUnderlying():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_protocolFeeUnderlying(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "protocolFeeUnderlying",
      "protocolFeeUnderlying():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  storyAppendFee(): BigInt {
    let result = super.call("storyAppendFee", "storyAppendFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_storyAppendFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "storyAppendFee",
      "storyAppendFee():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  storyRegisterFee(): BigInt {
    let result = super.call(
      "storyRegisterFee",
      "storyRegisterFee():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_storyRegisterFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "storyRegisterFee",
      "storyRegisterFee():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  votingDuration(): BigInt {
    let result = super.call("votingDuration", "votingDuration():(uint256)", []);

    return result[0].toBigInt();
  }

  try_votingDuration(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "votingDuration",
      "votingDuration():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _protocolFeeUnderlying(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _storyRegisterFee(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _storyAppendFee(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _votingDuration(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AppendStoryItemCandidateCall extends ethereum.Call {
  get inputs(): AppendStoryItemCandidateCall__Inputs {
    return new AppendStoryItemCandidateCall__Inputs(this);
  }

  get outputs(): AppendStoryItemCandidateCall__Outputs {
    return new AppendStoryItemCandidateCall__Outputs(this);
  }
}

export class AppendStoryItemCandidateCall__Inputs {
  _call: AppendStoryItemCandidateCall;

  constructor(call: AppendStoryItemCandidateCall) {
    this._call = call;
  }

  get head(): AppendStoryItemCandidateCallHeadStruct {
    return changetype<AppendStoryItemCandidateCallHeadStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get index(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get candidate(): AppendStoryItemCandidateCallCandidateStruct {
    return changetype<AppendStoryItemCandidateCallCandidateStruct>(
      this._call.inputValues[2].value.toTuple()
    );
  }
}

export class AppendStoryItemCandidateCall__Outputs {
  _call: AppendStoryItemCandidateCall;

  constructor(call: AppendStoryItemCandidateCall) {
    this._call = call;
  }
}

export class AppendStoryItemCandidateCallHeadStruct extends ethereum.Tuple {
  get profileId(): BigInt {
    return this[0].toBigInt();
  }

  get pubId(): BigInt {
    return this[1].toBigInt();
  }
}

export class AppendStoryItemCandidateCallCandidateStruct extends ethereum.Tuple {
  get profileId(): BigInt {
    return this[0].toBigInt();
  }

  get pubId(): BigInt {
    return this[1].toBigInt();
  }
}

export class CommitStoryCall extends ethereum.Call {
  get inputs(): CommitStoryCall__Inputs {
    return new CommitStoryCall__Inputs(this);
  }

  get outputs(): CommitStoryCall__Outputs {
    return new CommitStoryCall__Outputs(this);
  }
}

export class CommitStoryCall__Inputs {
  _call: CommitStoryCall;

  constructor(call: CommitStoryCall) {
    this._call = call;
  }

  get head(): CommitStoryCallHeadStruct {
    return changetype<CommitStoryCallHeadStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class CommitStoryCall__Outputs {
  _call: CommitStoryCall;

  constructor(call: CommitStoryCall) {
    this._call = call;
  }
}

export class CommitStoryCallHeadStruct extends ethereum.Tuple {
  get profileId(): BigInt {
    return this[0].toBigInt();
  }

  get pubId(): BigInt {
    return this[1].toBigInt();
  }
}

export class RegisterStoryCall extends ethereum.Call {
  get inputs(): RegisterStoryCall__Inputs {
    return new RegisterStoryCall__Inputs(this);
  }

  get outputs(): RegisterStoryCall__Outputs {
    return new RegisterStoryCall__Outputs(this);
  }
}

export class RegisterStoryCall__Inputs {
  _call: RegisterStoryCall;

  constructor(call: RegisterStoryCall) {
    this._call = call;
  }

  get head(): RegisterStoryCallHeadStruct {
    return changetype<RegisterStoryCallHeadStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class RegisterStoryCall__Outputs {
  _call: RegisterStoryCall;

  constructor(call: RegisterStoryCall) {
    this._call = call;
  }
}

export class RegisterStoryCallHeadStruct extends ethereum.Tuple {
  get profileId(): BigInt {
    return this[0].toBigInt();
  }

  get pubId(): BigInt {
    return this[1].toBigInt();
  }
}

export class VoteStoryItemCandidateCall extends ethereum.Call {
  get inputs(): VoteStoryItemCandidateCall__Inputs {
    return new VoteStoryItemCandidateCall__Inputs(this);
  }

  get outputs(): VoteStoryItemCandidateCall__Outputs {
    return new VoteStoryItemCandidateCall__Outputs(this);
  }
}

export class VoteStoryItemCandidateCall__Inputs {
  _call: VoteStoryItemCandidateCall;

  constructor(call: VoteStoryItemCandidateCall) {
    this._call = call;
  }

  get head(): VoteStoryItemCandidateCallHeadStruct {
    return changetype<VoteStoryItemCandidateCallHeadStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get index(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get candidate(): VoteStoryItemCandidateCallCandidateStruct {
    return changetype<VoteStoryItemCandidateCallCandidateStruct>(
      this._call.inputValues[2].value.toTuple()
    );
  }
}

export class VoteStoryItemCandidateCall__Outputs {
  _call: VoteStoryItemCandidateCall;

  constructor(call: VoteStoryItemCandidateCall) {
    this._call = call;
  }
}

export class VoteStoryItemCandidateCallHeadStruct extends ethereum.Tuple {
  get profileId(): BigInt {
    return this[0].toBigInt();
  }

  get pubId(): BigInt {
    return this[1].toBigInt();
  }
}

export class VoteStoryItemCandidateCallCandidateStruct extends ethereum.Tuple {
  get profileId(): BigInt {
    return this[0].toBigInt();
  }

  get pubId(): BigInt {
    return this[1].toBigInt();
  }
}
